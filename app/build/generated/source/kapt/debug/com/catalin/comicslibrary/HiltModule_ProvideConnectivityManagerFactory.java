// Generated by Dagger (https://dagger.dev).
package com.catalin.comicslibrary;

import android.content.Context;
import com.catalin.comicslibrary.model.connectivity.ConnectivityMonitor;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata("dagger.hilt.android.qualifiers.ApplicationContext")
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class HiltModule_ProvideConnectivityManagerFactory implements Factory<ConnectivityMonitor> {
  private final HiltModule module;

  private final Provider<Context> contextProvider;

  public HiltModule_ProvideConnectivityManagerFactory(HiltModule module,
      Provider<Context> contextProvider) {
    this.module = module;
    this.contextProvider = contextProvider;
  }

  @Override
  public ConnectivityMonitor get() {
    return provideConnectivityManager(module, contextProvider.get());
  }

  public static HiltModule_ProvideConnectivityManagerFactory create(HiltModule module,
      Provider<Context> contextProvider) {
    return new HiltModule_ProvideConnectivityManagerFactory(module, contextProvider);
  }

  public static ConnectivityMonitor provideConnectivityManager(HiltModule instance,
      Context context) {
    return Preconditions.checkNotNullFromProvides(instance.provideConnectivityManager(context));
  }
}
