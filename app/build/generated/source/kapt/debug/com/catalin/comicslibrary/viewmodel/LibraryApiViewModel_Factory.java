// Generated by Dagger (https://dagger.dev).
package com.catalin.comicslibrary.viewmodel;

import com.catalin.comicslibrary.model.api.MarvelApiRepo;
import com.catalin.comicslibrary.model.connectivity.ConnectivityMonitor;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class LibraryApiViewModel_Factory implements Factory<LibraryApiViewModel> {
  private final Provider<MarvelApiRepo> repoProvider;

  private final Provider<ConnectivityMonitor> connectivityMonitorProvider;

  public LibraryApiViewModel_Factory(Provider<MarvelApiRepo> repoProvider,
      Provider<ConnectivityMonitor> connectivityMonitorProvider) {
    this.repoProvider = repoProvider;
    this.connectivityMonitorProvider = connectivityMonitorProvider;
  }

  @Override
  public LibraryApiViewModel get() {
    return newInstance(repoProvider.get(), connectivityMonitorProvider.get());
  }

  public static LibraryApiViewModel_Factory create(Provider<MarvelApiRepo> repoProvider,
      Provider<ConnectivityMonitor> connectivityMonitorProvider) {
    return new LibraryApiViewModel_Factory(repoProvider, connectivityMonitorProvider);
  }

  public static LibraryApiViewModel newInstance(MarvelApiRepo repo,
      ConnectivityMonitor connectivityMonitor) {
    return new LibraryApiViewModel(repo, connectivityMonitor);
  }
}
